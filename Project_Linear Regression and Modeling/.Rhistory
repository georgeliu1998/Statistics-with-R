batting
summary(batting)
summary(strike)
summary(stolen)
summary(wins)
new_onbase <- lm(runs~new_onbase, data=mlb11)
new_slug <- lm(runs~new_slug, data=mlb11)
new_obs <- lm(runs~new_obs, data=mlb11)
summarise(new_onbase)
summary(new_onbase)
summary(new_slug)
summary(new_obs)
qt(0.025)
(30.39-32)/(4.31/6)
?pt
pt(-2.241299, df=35, lower.tail = T)
0.0157247*2
qnorm(.975)
(1.96*300/35)^2
(1.96*300/25)^2
(30.39-32)/(4.31)
qnorm(-0.3735499, lower.tail = T)
pnorm(-0.3735499, lower.tail = T)
0.3543696*2
set.seed(9102015)                 # make sure to change the seed
library(statsr)
library(dplyr)
library(ggplot2)
data(ames)
n <- 60
samp <- sample_n(ames, n)
ames
ggplot(data=ames, aes(x=area))+geom_histogram()
z_star_95 <- qnorm(0.975)
z_star_95
samp %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
params <- ames %>%
summarise(mu = mean(area))
View(params)
?rep_sample_n
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
View(ci)
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
View(ci)
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture, ci$capture))
View(ci_data)
ggplot(data = ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
?qnorm
qnorm(0.05, lower.tail = T)
qnorm(.995, lower.tail = T)
0.0936/(0.0936+0.088)
library(statsr)
library(dplyr)
library(ggplot2)
data(kobe_basket)
kobe_basket
kobe_streak <- calc_streak(kobe_basket$shot)
ggplot(data = kobe_streak, aes(x = length)) +
geom_histogram(binwidth = 1)
View(kobe_streak)
summary(kobe_streak)
shot_outcomes <- c("H", "M")
sim_basket <- sample(shot_outcomes, size = 1, replace = TRUE)
shot_outcomes <- c("H", "M")
sim_basket <- sample(shot_outcomes, size = 133, replace = TRUE, prob = c(0.45, 0.55))
sim_basket
sim_streak <- calc_streak(sim_basket)
View(sim_streak)
ggplot(data = sim_streak, aes(x = length)) +
geom_histogram(binwidth = 1)
ggplot(data = kobe_streak, aes(x = length)) +
geom_histogram(binwidth = 1)
pnorm(2, lower.tail = F)
0.02275013*2
pt(2, lower.tail = F, df=9)*2
qt(97.5%, lower.tail=T, df=21)
qt(0.975, lower.tail=T, df=21)
pt(2.24, lower.tail = T, df=21)
(1-0.9819815)*2
?pt
pt(0.5, df=17, lower.tail = F)
msg <- 525.01/7
mse <- 7584.11/189
msg/mse
sqrt(3.4^2/18+2.7^2/18)
pt(1.71, df=24, lower.tail=T)
pt(1.96, df=24, lower.tail=T)
pt(-1.96, df=24, lower.tail=T)
pt(-1.71, df=24, lower.tail=T)
library(statsr)
library(dplyr)
library(ggplot2)
data(nc)
nc
View(nc)
str(nc)
summary(nc$gained)
ggplot(data=nc, aes(x=habit, y=weight))+geom_boxplot()
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", method = "theoretical")
inference(y = weeks, data = nc, statistic = "mean", type = "ci", method = "theoretical")
38*7/30
str(nc)
ggplot(data=nc, aes(x=mature, y=mage))+geom_boxplot()
inference(y = weeks, data = nc, statistic = "mean", type = "ci", method = "theoretical", conf_level=.99)
.58*.15+.42*.58
1534/.24
440*1500/(440+360+300)
25.5/.17-25.5
10212*1.23*.38
(58500-13000)*(.93^10)
(58500-13000)*(.93^11)
95*.97*(2+1/12)
2400/2.5
960*1.5
132.57/480.25
install.packages(c("devtools", "dplyr"))
install.packages("caret")
76+.35*72+.43*30
(7003+57737)/(7003+57737+22790)
install.packages("GGally")
library(GGally)
library(statsr)
library(dplyr)
library(ggplot2)
library(GGally)
data(evals)
evals
hist(evals$score)
summary(evals$score)
length(evals$score<3)
evals[evals$score<3, "score"]
View(evals)
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_point()
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter()
m_bty <- lm(score ~ bty_avg, data=evals)
summary(m_bty)
plot(m_bty$residuals ~ evals$bty_avg)
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_point()
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
ggplot(data = evals, aes(x = bty_f1lower, y = bty_avg)) +
geom_jitter()
evals %>%
summarise(cor(bty_avg, bty_f1lower))
ggpairs(evals, columns = 13:19)
hist(m_bty$residuals)
qqnorm(m_bty$residuals)
qqline(m_bty$residuals)
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
summary(m_bty_gen)
m_bty_rank <- lm(score ~ bty_avg + rank, data = evals)
summary(m_bty_gen)
summary(m_bty_rank)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full)
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared
m2 = lm(score ~ rank + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m3 = lm(score ~ rank + ethnicity + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m4 = lm(score ~ rank + ethnicity + gender + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
summary(m3)$adj.r.squared
summary(m4)$adj.r.squared
m5 = lm(score ~ rank + ethnicity + gender + language + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m5)$adj.r.squared
m6 = lm(score ~ rank + ethnicity + gender + language + age +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m6)$adj.r.squared
m_bty_avg <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + pic_outfit + pic_color, data = evals)
summary(m_bty_avg)$adj.r.squared
m_cls_profs <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_credits + pic_outfit + pic_color, data = evals)
summary(m_cls_profs)$adj.r.squared
m_cls_students <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_level + cls_credits + pic_outfit + pic_color, data = evals)
summary(m_cls_students)$adj.r.squared
install.packages(c("broom", "devtools", "dplyr"))
p <- 300/2000
qnorm(.995, lower.tail = T)
p+c(-1, 1)*sqrt(p*(1-p)/2000)*2.575829
nums <- c(87029, 113407, 84843, 104994, 99327, 92052, 60684)
nums <- c(87029, 113407, 84843, 104994, 99327, 92052, 60684)
qnorm(97.5%)
qnorm(.975)
mean(nums)+c(-1, 1)*std(nums)/sqrt(length(nums))*1.96
mean(nums)+c(-1, 1)*sd(nums)/sqrt(length(nums))*1.96
0.7^6
0.3^6*6
pbinom(0, 6, prob = 0.3)
?pbinom
pbinom(1, 6, prob = 0.3)
pbinom(1, 6, prob = 0.3)-pbinom(0, 6, prob = 0.3)
pbinom(2, 6, prob = 0.3)-pbinom(1, 6, prob = 0.3)
pbinom(6, 6, prob = 0.3)-pbinom(5, 6, prob = 0.3)
0.3^6
pbinom(1, 7, prob=0.2, lower.tail = F)
1-pbinom(1, 7, prob=0.2, lower.tail = F)
1-pbinom(1, 7, prob=0.2, lower.tail = T)
1-pbinom(4, 6, prob = 0.5)
p <- 64454/(64454+61818)
p/sqrt(p*p/(64454+61818))
(p-0.5)/sqrt(p*p/(64454+61818))
p <- 15348/(15348+15312)
0.5+c(-1, 1)*1.968*sqrt(0.25/(15348+15312))
p
0.5+c(-1, 1)*1.96*sqrt(0.25/(15348+15312))
pnorm(1)
?pnorm
((1-68)/2)+68
((1-.68)/2)+.68
pnorm(-1)
pnorm(0.6, mean = 21, sd=5)
pnorm(24, mean = 21, sd=5)
pnorm(0.6)
qnorm(.9, mean=1500, sd=300)
qnorm(.1, mean=21, sd=5)
pbinom(1, 4, prob=.35)
pbinom(1, 4, prob=.35)-pbinom(0, 4, prob=.35)
pbinom(1, 4, prob=.35, lower.tail=F)-pbinom(0, 4, prob=.35, lower.tail=F)
pbinom(8, 10, prob=.13)
pbinom(8, 10, prob=.13)-pbinom(7, 10, prob=.13)
dbinom(8, 10, prob=.13)
pbinom(70, size=245, prob=.25, lower.tail = F)
pbinom(70, size=245, prob=.25, lower.tail = F)+dbinom(70, size=245, prob=.25)
pbinom(69, size=245, p=.25, lower.tail=F)
sum(dbinom(70:245), size=245, p=.25)
sum(dbinom(70:245, size=245, p=.25))
25*.45
dbinom(6, size=10, prob=.56)
dbinom(2, size=10, prob=.56)
dbinom(600, size=1000, prob=.56)
pbinom(59, size=100, prob=.56, lower.tail=FALSE)
sum(dbinom(60:100, size=100, prob=.56))
dbinom(2, siz=3, prob=.51)
pnorm(34, mean=24, sd=4, lower.tail = F)
.15/(.15+.7*.25)
75*.08
dbinom(92, size=100, prob=.9)
.23*.61/(.23*.61+.77*.73)
pbinom(35, size=3000000, prob=.00001, lower.tail = F)
install.packages(c("psych", "rstudioapi"))
sum(dbinom(95:200, size=200, prob=.9))
sum(dbinom(190:200, size=200, prob=.9))
(87.5-90)/sqrt(.9*.1/200)
sqrt(.9*.1/200)
(.875-.9)/sqrt(.9*.1/200)
(.5/.03)^2
35/250
ppool <- (71+224)/(144+389)
sqrt(ppool*(1-ppool)/144+ppool*(1-ppool)/389)
sqrt(0.3*.7/50)
150*.08
install.packages("shiny")
library(statsr)
library(dplyr)
library(ggplot2)
data(atheism)
View(atheism)
us12 <- atheism %>%
filter(nationality == "United States" , atheism$year == "2012")
View(us12)
us12 %>%
group_by(response) %>%
summary(percentage = n())
us12
table(us12)
50/(50+952)
inference(y = response, data = us12, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
(0.0634-0.0364)/2
d <- data.frame(p <- seq(0, 1, 0.01))
n <- 1000
d <- d %>%
mutate(me = 1.96*sqrt(p*(1 - p)/n))
ggplot(d, aes(x = p, y = me)) +
geom_line()
spain12 <- atheism %>%
filter(nationality == "Spain" , atheism$year == "2012")
View(spain12)
inference(y = response, data = spain12, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
?inference
inference(y = response, data = spain12, statistic = "proportion", type = "ht", method = "theoretical", success = "atheist")
inference(y = response, data = spain12, statistic = "proportion", type = "ht", method = "theoretical", success = "atheist", alternative = 'twosided')
inference(y = response, data = spain12, statistic = "proportion", type = "ht", method = "theoretical", success = "atheist", alternative = 'twosided', null = .1)
inference(y = response, data = us12, statistic = "proportion", type = "ht", method = "theoretical", success = "atheist", alternative = 'twosided', null = .01)
39*.05
.125/4
0.03125*(1-0.03125)/((.01/1.96)^2)
library(ggplot2)
library(dplyr)
library(statsr)
setwd("C:/Users/georg/OneDrive/WorkingDir/Duke Stats with R/Project_Linear Regression and Modeling")
load("movies.Rdata")
movies_select <- movies %>%
select(title_type:mpaa_rating, imdb_rating:imdb_num_votes, best_actor_win:top200_box)
View(movies_select)
fit <- lm(data=movies_select, imdb_rating~.)
captain_america <- data.frame(title_type='Feature Film', genre='Action & Adventure', runtime=147, mpaa_rating='PG-13', imdb_num_votes=237462, best_actor_win='yes', best_actress_win='yes', best_dir_win='yes', top200_box='yes')
predict(fit, captain_america)
captain_america <- data.frame(title_type='Feature Film', genre='Action & Adventure', runtime=147, mpaa_rating='PG-13', imdb_num_votes=237462, best_actor_win='no', best_actress_win='no', best_dir_win='no', top200_box='yes')
predict(fit, captain_america)
View(movies)
ggplot(data=movies, aes(x=imdb_num_votes, y=imdb_rating)) +
geom_point()
ggplot(data=movies, aes(x=runtime, y=imdb_rating)) +
geom_point()
geom_boxplot()
ggplot(data=movies, aes(x=top200_box, y=imdb_rating)) +
geom_boxplot()
movies %>%
select(imdb_rating, top200_box) %>%
group_by(top200_box) %>%
summarize(mean=mean(), median=median())
movies %>%
select(imdb_rating, top200_box) %>%
group_by(top200_box) %>%
summarize(mean=mean(imdb_rating), median=median(imdb_rating))
colnames(movies)
summary(fit)
movies_select <- movies %>%
select(title_type:mpaa_rating, imdb_rating:imdb_num_votes, best_actor_win:top200_box)
View(movies_select)
fit <- lm(data=movies_select, imdb_rating~.)
colnames(movies_select)
ggplot(data=movies_select, aes(x=runtime, y=imdb_num_votes)) +
geom_point()
fit <- lm(data=movies_select, imdb_rating~.)
summary(fit)
colnames(movies_select)
fit <- lm(data=movies_select, imdb_rating~genre+runtime+mpaa_rating+imdb_num_votes+best_actor_win+best_actress_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+runtime+mpaa_rating+imdb_num_votes+best_actor_win+best_actress_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+mpaa_rating+imdb_num_votes+best_actor_win+best_actress_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+imdb_num_votes+best_actor_win+best_actress_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+best_actor_win+best_actress_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_actress_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_actor_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_actor_win+best_actress_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_actor_win+best_actress_win+best_dir_win)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_actress_win+best_dir_win+top200_box)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_actress_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~genre+runtime+mpaa_rating+imdb_num_votes+best_actress_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+runtime+mpaa_rating+imdb_num_votes+best_actress_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+mpaa_rating+imdb_num_votes+best_actress_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+imdb_num_votes+best_actress_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+best_actress_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_actress_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_actress_win+best_dir_win)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_actress_win+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+runtime+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+imdb_num_votes+best_dir_win+top200_box)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+best_dir_win+top200_box)
fit <- lm(data=movies_select, imdb_rating~genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+runtime+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+imdb_num_votes+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win+top200_box)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+runtime+mpaa_rating+imdb_num_votes+best_dir_win)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+mpaa_rating+imdb_num_votes+best_dir_win)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+imdb_num_votes+best_dir_win)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+best_dir_win)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win)
summary(fit)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win)
summary(fit)
captain_america <- data.frame(title_type='Feature Film', genre='Action & Adventure', runtime=147, mpaa_rating='PG-13', imdb_num_votes=237462, best_dir_win='no')
predict(fit, captain_america)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win)
summary(fit)
str(movies_select)
type(movies_select$genre)
class(movies_select$genre)
levels(movies_select$genre)
levels(movies_select$title_type)
levels(movies_select$imdb_rating)
levels(movies_select$mpaa_rating)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win)
captain_america <- data.frame(title_type='Feature Film', genre='Action & Adventure', runtime=147, mpaa_rating='PG-13', imdb_num_votes=237462, best_dir_win='no')
predict(fit, captain_america)
plot(fit$residuals~movies_select$runtime)
plot(fit$residuals~movies_select$imdb_num_votes)
plot(fit$residuals~movies_select$runtime)
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win)
summary(fit)
plot(fit$residuals ~ movies_select$runtime)
plot(fit$residuals ~ movies_select$imdb_num_votes)
sum(is.na(movies_select))
sapply(movies_select, function(x) sum(is.na(x)))
mean(movies_select$runtime)
mean(movies_select$runtime, na.rm = T)
movies_select$runtime == 'NA'
movies_select$runtime[movies_select$runtime == 'NA'] <- mean(movies_select$runtime, na.rm = T)
View(movies_select)
sapply(movies_select, function(x) sum(is.na(x)))
movies_select$runtime == 'NA'
movies_select$runtime == NA
is.na(movies_select$runtime)
movies_select$runtime[is.na(movies_select$runtime)] <- mean(movies_select$runtime, na.rm = T)
sapply(movies_select, function(x) sum(is.na(x)))
fit <- lm(data=movies_select, imdb_rating~title_type+genre+runtime+mpaa_rating+imdb_num_votes+best_dir_win)
plot(fit$residuals ~ movies_select$runtime)
plot(fit$residuals ~ movies_select$imdb_num_votes)
plot(fit$residuals ~ movies_select$runtime)
plot(fit$residuals ~ movies_select$runtime)
plot(fit$residuals ~ movies_select$imdb_num_votes)
plot(fit$residuals ~ movies_select$runtime)
hist(fit$residuals)
qqnorm(fit$residuals)
qqline(fit$residuals)
hist(fit$residuals)
qqnorm(fit$residuals)
qqline(fit$residuals)
plot(fit$residuals ~ fit$fitted)
plot(fit$residuals ~ fit$fitted.values)
plot(abs(fit$residuals) ~ fit$fitted.values)
plot(fit$residuals ~ movies_select$runtime)
plot(fit$residuals)
captain_america <- data.frame(title_type='Feature Film', genre='Action & Adventure', runtime=147, mpaa_rating='PG-13', imdb_num_votes=237462, best_dir_win='no')
predict(fit, captain_america)
captain_america <- data.frame(title_type='Feature Film', genre='Action & Adventure', runtime=147, mpaa_rating='PG-13', imdb_num_votes=248046, best_dir_win='no')
predict(fit, captain_america)
?predict
predict(fit, captain_america, interval="confidence")
